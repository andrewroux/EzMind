@page
@model EasyMind.Pages.Profiles.CreateModel

@{
    ViewData["Title"] = "Create";
}


<h2>Create</h2>

<h4>Profile</h4>
<hr />
<div class="row">
    <form method="post" enctype="multipart/form-data">
        <div class="col-md-4">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Profile.FirstName" class="control-label"></label>
                <input asp-for="Profile.FirstName" class="form-control" />
                <span asp-validation-for="Profile.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Profile.LastName" class="control-label"></label>
                <input asp-for="Profile.LastName" class="form-control" />
                <span asp-validation-for="Profile.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Profile.MobilePhone" class="control-label"></label>
                <input asp-for="Profile.MobilePhone" class="form-control" />
                <span asp-validation-for="Profile.MobilePhone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Profile.Phone" class="control-label"></label>
                <input asp-for="Profile.Phone" class="form-control" />
                <span asp-validation-for="Profile.Phone" class="text-danger"></span>
            </div>
            <hr />
            <h4>Address Section</h4>
            <div class="form-group">
                <input id="autocomplete" placeholder="Enter your address"
                       onFocus="geolocate()" class="form-control" type="text">
            </div>

            <div class="form-group">
                <label asp-for="Profile.Address" class="control-label"></label>
                <input asp-for="Profile.Address" class="form-control" id="route" />
                <span asp-validation-for="Profile.Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Profile.City" class="control-label"></label>
                <input asp-for="Profile.City" class="form-control" id="locality" />
                <span asp-validation-for="Profile.City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Profile.State" class="control-label"></label>
                <input asp-for="Profile.State" class="form-control" id="administrative_area_level_1" />
                <span asp-validation-for="Profile.State" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Profile.Zip" class="control-label"></label>
                <input asp-for="Profile.Zip" class="form-control" id="postal_code" />
                <span asp-validation-for="Profile.Zip" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Profile.Country" class="control-label"></label>
                <input asp-for="Profile.Country" class="form-control" id="country" />
                <span asp-validation-for="Profile.Country" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="Profile.Latitude" class="form-control" id="latitude" />
                <span asp-validation-for="Profile.Latitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="Profile.Longitude" class="form-control" id="longitude" />
                <span asp-validation-for="Profile.Longitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="Profile.AboutMe" class="control-label"></label>
                <textarea input asp-for="Profile.AboutMe" type="text" class="form-control"></textarea>
                <span asp-validation-for="Profile.AboutMe" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Profile.Price" class="control-label"> Enter your rate p/hour</label>
                <input asp-for="Profile.Price" class="form-control" />
                <span asp-validation-for="Profile.Price" class="text-danger"></span>
            </div>
        </div>
</form>
    
</div>
<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript"></script>
    @*<script type="text/javascript" language="JavaScript">
            $(document).ready(function () {
                $('#btnUpload').on('click', function () {
                    var files = $('#fUpload').prop("files");
                    var fdata = new FormData();
                    for (var i = 0; i < files.length; i++) {
                        fdata.append("files", files[i]);
                    }
                    if (files.length > 0) {
                        $.ajax({
                            type: "POST",
                            url: "/Profiles/Create?handler=Upload",
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader("XSRF-TOKEN",
                                    $('input:hidden[name="__RequestVerificationToken"]').val());

                            },
                            data: fdata,
                            contentType: false,
                            processData: false,
                            success: function (response) {
                                alert('File Uploaded Successfully.')
                            }
                        });
                    }
                    else {
                        alert('Please select a file.')
                    }
                })
            });
        </script>*@
    <script>
        // This example displays an address form, using the autocomplete feature
        // of the Google Places API to help users fill in the information.

        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:


        var placeSearch, autocomplete;
        var componentForm = {
            route: 'long_name',
            locality: 'long_name',
            administrative_area_level_1: 'short_name',
            country: 'long_name',
            postal_code: 'short_name'

        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                //type {!HTMLInputElement}
                (document.getElementById('autocomplete')),
                { types: ['geocode'] });


            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();
            var lat = place.geometry.location.lat();
            var lng = place.geometry.location.lng();

            for (var component in componentForm) {
                document.getElementById(component).value = '';

            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
            document.getElementById("latitude").value = lat;
            document.getElementById("longitude").value = lng;
        }

        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
            document.getElementById("latitude").value = lat;
            document.getElementById("longitude").value = lng;
        }

    </script>


    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAb4QDT4bh3de2CzhbtaMOVD51y8s-WP9E&libraries=places&callback=initAutocomplete"
            async defer></script>

}
